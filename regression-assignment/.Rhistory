data <- read.csv("train.csv") # TODO header=TRUE
setwd('./ga-datascience/datascience_repo/regression-assignment/')
data <- read.csv("train.csv") # TODO header=TRUE
train.indices <- sample(1:nrow(data), 0.7 * nrow(data))
data.train <- data[train.indices,]
data.test <- data[-train.indices,]
length(levels(data.train$Title))
length(data.train)
nrows(data.train)
rnum(data.train)
nrow(data.train)
head(data.train$Title)
model <- lm(SalaryNormalized ~ LocationNormalized, data.train)
mae(predict(model, data.test), data.test$SalaryNormalized) # 10335.07
mae <- function(x,y)
{
sum( abs(x-y) ) /length(x)
}
mae(predict(model, data.test), data.test$SalaryNormalized) # 10335.07
summary(model) # R2 = 0.1446
mae(predict(model, data.test), data.test$SalaryNormalized) # 10335.07
length(levels(data.train$LocationNormalized))
length(levels(data.train$SourceName))
model <- lm(SalaryNormalized ~ SourceName, data.train)
mae(predict(model, data.test), data.test$SalaryNormalized)
summary(model)
mae(predict(model, data.test), data.test$SalaryNormalized)
summary(model) # R2 = 0.203
predict(model, data.test)
data.mini <- head()
?head
data.mini <- head(data, n=100)
data.mini[data.mini$SalaryNormalized > 35000]
data.mini[data.mini$SalaryNormalized > 35000,]
data.mini[data.mini$SalaryNormalized < 35000,]
data.mini[data.mini$SourceName==cv-library.co.uk,]
data.mini[data.mini$SourceName=="cv-library.co.uk",]
which(!(data.test$SourceName %in% levels(data.train$SourceName)))
id <- which(!(data.test$SourceName %in% levels(data.train$SourceName)))
id
fix(id)
length(data.test$SourceName)
levels(data.train$SourceName))
levels(data.train$SourceName)
levels(data.test$SourceName)
which((data.test$SourceName %in% levels(data.train$SourceName)))
id <- which((data.test$SourceName %in% levels(data.train$SourceName)))
-id
data.test[id,]
summary(data.test[id,])
nrow(data.test[id,])
nrow(data.test[-id,])
?%in%
?%
nrow(data.test[-id,])
id <- which((data.test$SourceName %in% levels(data.train$SourceName)))
length(evels(data.train$SourceName))
length(levels(data.train$SourceName))
length(levels(data.test$SourceName))
levels(data.train$SourceName)
levels(data.test$SourceName)
read.csv('Location_Tree.csv')
location.tree <- read.csv('Location_Tree.csv')
summary(location.tree)
head(location.tree)
nrow(location.tree)
category.counts <- summary(data.train$Category)
top.categories <- names(category.counts[order(category.counts, decreasing= TRUE)][1:10])
top.categories
?factor
data.train$NewCategoryFeature <- factor(data.train$Category, levels=top.categories)
head(data.train$NewCategoryFeature)
head(data.train$NewCategoryFeature, n=100)
head(data.train$Category, n=100)
levels(data.train$SourceName) <- c(levels(data.train$SourceName), levels(data.test$SourceName))
model <- lm(SalaryNormalized ~ SourceName, data.train)
mae(predict(model, data.test), data.test$SalaryNormalized)
levels(data.test)
levels(data.test$SourceName)
levels(data.train$SourceName)
mae(predict(model, data.test), data.test$SalaryNormalized)
mae(predict(model, data.test), data.test)
mae(predict(model, data.test), data.test$SourceName)
mae(predict(model, data.test), data.test$SalaryNormalized)
?addNa
?addNA
levels(data.train$Category)
data.mini
grepl('Scien', data.mini$Category)
data.mini$Category
grepl('Engineer', data.mini$Category)
data.junk <- data.mini
data.junk$Engineer <- grepl('Engineer', data.mini$Category)
data.junk$Engineer
data.junk$Engineer <- grepl('IT', data.mini$Category)
data.junk$Engineer
data.junk$Engineer <- grepl('IT', data.mini$Category) || grepl('Engineer', data.mini$Category)
data.junk$Engineer
data.junk$Engineer <- grepl('IT', data.mini$Category) | grepl('Engineer', data.mini$Category)
data.junk$Engineer
data.train$WhiteCollar <- grepl('IT', data.mini$Category) | grepl('Engineer', data.mini$Category) | grepl('Finance', data.mini$Category) | grepl('Legal', data.mini$Category) | grepl('Consult', data.mini$Category)
data.test$WhiteCollar <- grepl('IT', data.mini$Category) | grepl('Engineer', data.mini$Category) | grepl('Finance', data.mini$Category) | grepl('Legal', data.mini$Category) | grepl('Consult', data.mini$Category)
data.train$WhiteCollar
data.train$BlueCollar <- grepl('Retail', data.mini$Category) | grepl('Manuf', data.mini$Category) | grepl('Hospitality', data.mini$Category) | grepl('Admin', data.mini$Category) | grepl('Social Work', data.mini$Category) | grepl('Construct', data.mini$Category) | grepl('Maint', data.mini$Category) | grepl('Domestic', data.mini$Category) | grepl('Charity', data.mini$Category)
data.test$BlueCollar <- grepl('Retail', data.mini$Category) | grepl('Manuf', data.mini$Category) | grepl('Hospitality', data.mini$Category) | grepl('Admin', data.mini$Category) | grepl('Social Work', data.mini$Category) | grepl('Construct', data.mini$Category) | grepl('Maint', data.mini$Category) | grepl('Domestic', data.mini$Category) | grepl('Charity', data.mini$Category)
model <- lm(SalaryNormalized ~ WhiteCollar + BlueCollar, data.train)
mae(predict(model, data.test), data.test$SalaryNormalized) # 10335.07
summary(model) # R2 = 0.1446
model <- lm(SalaryNormalized ~ WhiteCollar , data.train)
mae(predict(model, data.test), data.test$SalaryNormalized) # 10335.07
summary(model) # R2 = 0.1446
model <- lm(SalaryNormalized ~ WhiteCollar:BlueCollar, data.train)
mae(predict(model, data.test), data.test$SalaryNormalized) # 11933.53
summary(model) # R2 = 2.31e-05
model <- lm(SalaryNormalized ~ ContractType:ContractTime, data.train)
mae(predict(model, data.test), data.test$SalaryNormalized) # 11284.07
summary(model) # R2 = 0.074
model <- lm(SalaryNormalized ~ WhiteCollar, data.train)
mae(predict(model, data.test), data.test$SalaryNormalized) # 11933.53
summary(model) # R2 = 2.31e-05
model <- lm(SalaryNormalized ~ Category:ContractType, data.train)
mae(predict(model, data.test), data.test$SalaryNormalized) # 10335.07
summary(model) # R2 = 0.1446
model <- lm(SalaryNormalized ~ Category:ContractTime, data.train)
mae(predict(model, data.test), data.test$SalaryNormalized) # 10335.07
summary(model) # R2 = 0.1446
model <- lm(SalaryNormalized ~ Category + ContractTime, data.train)
mae(predict(model, data.test), data.test$SalaryNormalized) # 10335.07
summary(model) # R2 = 0.1446
?cv.lm
sources.counts <- summary(data$SourceName) # Use master data set
sources.counts
top.sources <- names(sources.counts[order(sources.counts, decreasing= TRUE)][1:10])
top.sources
data.train$TopSource <- factor(data.train$Source, levels=top.categories)
head(data.train$TopSource)
data.train$TopSource[is.na(train$TopSource)] <- "Other Source"
data.train$TopSource[is.na(data.train$TopSource)] <- "Other Source"
data.test$TopSource <- factor(data.test$Source, levels=top.categories)
data.test$TopSource[is.na(data.test$TopSource)] <- "Other Source"
head(data.test$TopSource, n=30)
head(data.test$TopSource, n=60)
head(data.test$TopSource, n=1110)
top.categories <- names(category.counts[order(category.counts, decreasing= TRUE)][1:10])
data.train$NewCategoryFeature <- factor(data.train$Category, levels=top.categories)
data.train$NewCategoryFeature[is.na(train$NewCatFeature)] <- "Other/General Jobs"
head(data.train$NewCategoryFeature, n=60)
sources.counts <- summary(data.train$SourceName)
top.sources <- names(sources.counts[order(sources.counts, decreasing= TRUE)][1:10])
data.train$TopSource <- factor(data.train$Source, levels=top.categories)
data.train$TopSource[is.na(data.train$TopSource)] <- "Other Source"
summary(train)
data.train$NewCategoryFeature[is.na(data.train$NewCatFeature)] <- "Other/General Jobs"
data.train$TopSource[is.na(train$TopSource)] <- "Other Source"
head(data.test$TopSource, n=60)
data.train$TopSource[is.na(data.train$TopSource)] <- "Other Source"
data.train$TopSource)
head(data.train$TopSource[is.na(data.train$TopSource)])
data.train$TopSource <- factor(data.train$Source, levels=top.categories)
data.train$TopSource <- factor(data.train$Source, levels=top.categories)
head(data.train$TopSource[is.na(data.train$TopSource)])
head(data.train$TopSource[is.na(data.train$TopSource)], n=50)
head(data.train$Source)
top.categories
top.sources <- names(sources.counts[order(sources.counts, decreasing= TRUE)][1:10])
data.train$TopSource <- factor(data.train$Source, levels=top.sources)
data.train$TopSource[is.na(data.train$TopSource)] <- "Other Source"
head(data.train$TopSource)
head(data.train$TopSource, n=50)
data.test$TopSource <- factor(data.test$Source, levels=top.sources)
data.test$TopSource[is.na(data.test$TopSource)] <- "Other Source"
model <- lm(SalaryNormalized ~ TopSource, data.train)
mae(predict(model, data.test), data.test$SalaryNormalized)
summary(model) # R2 = 0.203
summary(data.test$TopSource)
data.train$TopSource[is.na(data.train$TopSource)] <- "Other Source"
mae(predict(model, data.test), data.test$SalaryNormalized)
data.test$TopSource <- factor(data.test$Source, levels=top.sources)
data.test$TopSource[is.na(data.test$TopSource)] <- "Other Source"
model <- lm(SalaryNormalized ~ TopSource, data.train)
mae(predict(model, data.test), data.test$SalaryNormalized)
summary(model) # R2 = 0.171
model <- lm(SalaryNormalized ~ Category:ContractTime, data.train)
mae(predict(model, data.test), data.test$SalaryNormalized)
summary(model) # R2 = 0.171
model <- lm(SalaryNormalized ~ Category:ContractTime + TopSource, data.train)
mae(predict(model, data.test), data.test$SalaryNormalized)
summary(model) # R2 = 0.171
model <- lm(SalaryNormalized ~ Category:ContractTime + TopSource + WhiteCollar, data.train)
mae(predict(model, data.test), data.test$SalaryNormalized)
summary(model) # R2 = 0.171
model <- lm(SalaryNormalized ~ Category*ContractTime, data.train)
mae(predict(model, data.test), data.test$SalaryNormalized)
summary(model) # R2 = 0.171
model <- lm(SalaryNormalized ~ Category:ContractTime, data.train)
summary(model) # R2 = 0.171
mae(predict(model, data.test), data.test$SalaryNormalized)
?cv.lm
library('DAAG')
?cv.lm
cv.lm(df=data, form.lm = formula(SalaryNormalized ~ Category:ContractTime), m=3, dots=FALSE, plotit=TRUE)
cv.lm(df=data, form.lm = formula(SalaryNormalized ~ Category:ContractTime + TopSource), m=3, dots=FALSE, plotit=TRUE)
data$TopSource <- factor(data$Source, levels=top.sources)
data$TopSource[is.na(data$TopSource)] <- "Other Source"
cv.lm(df=data, form.lm = formula(SalaryNormalized ~ Category:ContractTime + TopSource), m=3, dots=FALSE, plotit=TRUE)
data$TopSource <- factor(data$Source, levels=top.sources)
data$TopSource[is.na(data$TopSource)] <- "Other Source"
head(data)
locations.counts <- summary(data$LocationNormalized)
top.locations <- names(locations.counts[order(locations.counts, decreasing= TRUE)][1:10])
data$TopLocation <- factor(data$LocationNormalized, levels=top.locations)
data$TopLocation[is.na(data$TopLocation)] <- "Other Location"
model <- lm(SalaryNormalized ~ TopLocation, data)
mae(predict(model, data), data$SalaryNormalized)
summary(model) # R2 = 0.171
top.locations
cv.lm(df=data, form.lm = formula(SalaryNormalized ~ Category:ContractTime + TopLocation), m=3, dots=FALSE, plotit=TRUE)
cv.lm(df=data, form.lm = formula(SalaryNormalized ~ Category:ContractTime), m=3, dots=FALSE, plotit=TRUE)
cv.lm(df=data, form.lm = formula(SalaryNormalized ~ Category:ContractTime), m=3) # plot: dots=FALSE, plotit=TRUE
cv.lm(df=data, form.lm = formula(SalaryNormalized ~ Category + ContractTime), m=3) # plot: dots=FALSE, plotit=TRUE
cv.lm(df=data, form.lm = formula(SalaryNormalized ~ Category + ContractTime), m=3)
result <- cv.lm(df=data, form.lm = formula(SalaryNormalized ~ Category + ContractTime), m=3) # plot: dots=FALSE, plotit=TRUE
result$FullDescription
top.locations
